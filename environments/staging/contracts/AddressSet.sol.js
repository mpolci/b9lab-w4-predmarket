// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"value","type":"address"}],"name":"insert","outputs":[{"name":"result","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[{"name":"self","type":"AddressSet.data storage"}],"name":"iterate_start","outputs":[{"name":"index","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"index","type":"uint256"}],"name":"iterate_get","outputs":[{"name":"value","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"value","type":"address"}],"name":"remove","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"value","type":"address"}],"name":"contains","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"index","type":"uint256"}],"name":"iterate_advance","outputs":[{"name":"r_index","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"self","type":"AddressSet.data storage"},{"name":"index","type":"uint256"}],"name":"iterate_valid","outputs":[{"name":"","type":"bool"}],"type":"function"}],
    binary: "606060405261034e806100126000396000f36503050000000050606060405236156100695760e060020a600035046301a0a172811461006e578063190b76cb146100a1578063451fed37146100bd5780637558527f146100f15780638188974614610120578063e7d39f361461014a578063f2d017d014610162575b610007565b610178600435602435600160a060020a038116600090815260208390526040812054818111156101d05760019150610274565b61018e60043560006101448260005b60005b6102fa838361016c565b6101a06004356024356000826001016000508281548110156100075750815260209020810154600160a060020a0316610144565b6101bc600435602435600160a060020a0381166000908152602083905260408120548082141561027f57610274565b6101bc600435602435600160a060020a038116600090815260208390526040812054115b92915050565b61018e60043560243560010160006102ec83836100b0565b6101bc6004356024355b60018201548110610144565b6040805160ff9092168252519081900360200190f35b60408051918252519081900360200190f35b60408051600160a060020a039092168252519081900360200190f35b604080519115158252519081900360200190f35b8360010160005080548060010182818154818355818115116102155781836000526020600020918201910161021591905b8082111561027b5760008155600101610201565b5050506000928352506020808320909101805473ffffffffffffffffffffffffffffffffffffffff191686179055600186810154600160a060020a03871684529187905260409092208190556002868101805490930190925590925090505b5092915050565b5090565b600160a060020a03831660009081526020859052604081205560018401805460001983019081101561000757506000908152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055600285018054909101905560019150610274565b9050610144565b5080610144565b801561033d575060018381018054918401918591600091869081101561000757908252602080832090910154600160a060020a0316825291909152604090205414155b156102f357600191909101906100b356",
    unlinked_binary: "606060405261034e806100126000396000f36503050000000050606060405236156100695760e060020a600035046301a0a172811461006e578063190b76cb146100a1578063451fed37146100bd5780637558527f146100f15780638188974614610120578063e7d39f361461014a578063f2d017d014610162575b610007565b610178600435602435600160a060020a038116600090815260208390526040812054818111156101d05760019150610274565b61018e60043560006101448260005b60005b6102fa838361016c565b6101a06004356024356000826001016000508281548110156100075750815260209020810154600160a060020a0316610144565b6101bc600435602435600160a060020a0381166000908152602083905260408120548082141561027f57610274565b6101bc600435602435600160a060020a038116600090815260208390526040812054115b92915050565b61018e60043560243560010160006102ec83836100b0565b6101bc6004356024355b60018201548110610144565b6040805160ff9092168252519081900360200190f35b60408051918252519081900360200190f35b60408051600160a060020a039092168252519081900360200190f35b604080519115158252519081900360200190f35b8360010160005080548060010182818154818355818115116102155781836000526020600020918201910161021591905b8082111561027b5760008155600101610201565b5050506000928352506020808320909101805473ffffffffffffffffffffffffffffffffffffffff191686179055600186810154600160a060020a03871684529187905260409092208190556002868101805490930190925590925090505b5092915050565b5090565b600160a060020a03831660009081526020859052604081205560018401805460001983019081101561000757506000908152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055600285018054909101905560019150610274565b9050610144565b5080610144565b801561033d575060018381018054918401918591600091869081101561000757908252602080832090910154600160a060020a0316825291909152604090205414155b156102f357600191909101906100b356",
    address: "0x31ffadad3ed2c6469e40d488bdfc5dc1429898b7",
    generated_with: "2.0.9",
    contract_name: "AddressSet"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("AddressSet error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("AddressSet error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("AddressSet error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("AddressSet error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.AddressSet = Contract;
  }

})();
